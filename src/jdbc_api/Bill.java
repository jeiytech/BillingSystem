/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jdbc_api;

import java.awt.print.PrinterException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author HP
 */
public class Bill extends javax.swing.JFrame {
    
    String AC;
    private double grdTotal;

    /**
     *
     */
    public void removePr(){
    p_name.removeAllItems();
    b_name.removeAllItems();
    v_name.removeAllItems();
    s_avail.removeAllItems();
    price.removeAllItems();
    quanTity.removeAllItems();
    }

    /**
     *
     */
    public void removeBr(){
    b_name.removeAllItems();
    v_name.removeAllItems();
    s_avail.removeAllItems();
    price.removeAllItems();
    quanTity.removeAllItems();
    }

    /**
     *
     */
    public void removeVr(){
    v_name.removeAllItems();
    s_avail.removeAllItems();
    price.removeAllItems();
    quanTity.removeAllItems();
    }

    /**
     *
     */
    public void removeSa(){
    s_avail.removeAllItems();
    price.removeAllItems();
    quanTity.removeAllItems();
    }

    /**
     *
     */
    public void removeP(){
    price.removeAllItems();
    quanTity.removeAllItems();
    }
    
    /**
     *
     */
    public void removeQ(){
    quanTity.removeAllItems();
    }

    /**
     *
     */
    public void genID(){
  /*
    genAccount function
        1. Generate ID using a function to initialise 3 variables to give 5 random integers as an Account number.  
 */        
        
        try{
            Random dice = new Random();

            int a,b,c,d,e;
            a = dice.nextInt(2);
            b = dice.nextInt(9);
            c = dice.nextInt(9);
            d = dice.nextInt(9);
            e = dice.nextInt(2);        
            AC = a + "" + b +""+ c +""+ d +""+ e +"";
            bill_id.setText(AC);
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        }
         
    /**
     *
     */
    public void addtoTable(){
         String BRAND = (String) b_name.getSelectedItem();
         brand.setText(BRAND);
         String VERSION = (String) v_name.getSelectedItem();
         version.setText(VERSION);
         Price.setText((String) price.getSelectedItem());
         String AVAIL = (String) quanTity.getSelectedItem();
         available.setText(AVAIL);
         }
         
    /**
     * Creates new form Bill
     */
    public Bill() {
        initComponents();
        SelectSeller();
    }
    Connection conn = null;
    Statement St = null;
    ResultSet Rs = null;

    /**
     *
     */
    public void  SelectSeller(){
        
        try {
            conn = DriverManager.getConnection("jdbc:derby://localhost:1527/detail", "root", "root");
            St = conn.createStatement();
            Rs = St.executeQuery("Select * from BILLTABLE");
            billtable.setModel(DbUtils.resultSetToTableModel(Rs));
        } catch (Exception e) 
        {
        }    
    }

    /**
     *
     */
    public void clear(){
    quantity.setText("");
    brand.setText("");
    version.setText("");
    Price.setText("");
    id.setText("");
    }

    /**
     *
     */
    public void edit(){
        try{
            int avail = Integer.valueOf(available.getText()) - Integer.valueOf(quantity.getText());
            String NID = p_name.getSelectedIndex() + 1 + "0" + b_name.getSelectedIndex() + 1 +"0"+ v_name.getSelectedIndex() + 1 + "0" + s_avail.getSelectedIndex() + 1;
                conn = DriverManager.getConnection("jdbc:derby://localhost:1527/detail", "root", "root");
                String Query = "Update ADDNOAVAIL set NOAVAIL="+ avail + " where PRODUCTID =" + NID;
                Statement Add = conn.createStatement();
                Add.executeUpdate(Query);
                //JOptionPane.showMessageDialog(this, "Product Updated");
                SelectSeller();
            }catch(SQLException e)
            {
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        p_name = new javax.swing.JComboBox<>();
        b_name = new javax.swing.JComboBox<>();
        v_name = new javax.swing.JComboBox<>();
        s_avail = new javax.swing.JComboBox<>();
        price = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        quanTity = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        billtable = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        bill_id = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        quantity = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        brand = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        version = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        Price = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        id = new javax.swing.JTextField();
        available = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        BillTxt = new javax.swing.JTextArea();
        addToBill = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        total = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Product Name");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Brand Name:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Version Name:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Sizes Available:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Price:");

        p_name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p_nameMouseClicked(evt);
            }
        });
        p_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p_nameActionPerformed(evt);
            }
        });

        b_name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_nameMouseClicked(evt);
            }
        });
        b_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_nameActionPerformed(evt);
            }
        });

        v_name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                v_nameMouseClicked(evt);
            }
        });
        v_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                v_nameActionPerformed(evt);
            }
        });

        s_avail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                s_availMouseClicked(evt);
            }
        });

        price.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                priceMouseClicked(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Quantity Available:");

        quanTity.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quanTityMouseClicked(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jdbc_api/icons8_import_40px_1.png"))); // NOI18N
        jButton1.setText("Add");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(jLabel4)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(p_name, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(v_name, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(b_name, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(s_avail, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(price, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(quanTity, 0, 337, Short.MAX_VALUE)))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(p_name, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_name, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(v_name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(s_avail, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(quanTity, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addComponent(jButton1))
        );

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jdbc_api/icons8_x_25px.png"))); // NOI18N
        jButton4.setText("Log Out");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        billtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Quantity", "Brand", "Version", "Price", "ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        billtable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                billtableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(billtable);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("BILL ID:");

        bill_id.setEditable(false);
        bill_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bill_idActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("Version:");

        quantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Point Of Sale");

        jButton2.setText("Get ID");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setText("Brand:");

        brand.setEditable(false);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setText("QUANTITY:");

        version.setEditable(false);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setText("Price:");

        Price.setEditable(false);
        Price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PriceActionPerformed(evt);
            }
        });

        jButton3.setText("ADD");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setText("EDIT");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("REMOVE");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("CLEAR");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        id.setEditable(false);

        available.setEditable(false);

        BillTxt.setEditable(false);
        BillTxt.setColumns(20);
        BillTxt.setFont(new java.awt.Font("Cambria", 1, 10)); // NOI18N
        BillTxt.setRows(5);
        jScrollPane2.setViewportView(BillTxt);

        addToBill.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addToBill.setText("Add To Bill");
        addToBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToBillActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton9.setText("Print Receipt");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        total.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("Total:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(497, 497, 497)
                        .addComponent(jButton4))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(bill_id)
                                            .addComponent(brand, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel8)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(80, 80, 80)
                                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(quantity, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                                            .addComponent(version))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(32, 32, 32)
                                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(Price, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(58, 58, 58)
                                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(110, 110, 110)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(available, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(addToBill, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(31, 31, 31))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(jScrollPane2)
                        .addGap(26, 26, 26))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(494, 494, 494)
                                .addComponent(addToBill)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                                .addComponent(jButton9)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bill_id, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(brand)
                                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(version, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addComponent(Price, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(available, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void p_nameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p_nameMouseClicked
        // TODO add your handling code here:
        Connection conn = javaConnect.connect();
        removePr();
        if(conn != null){
            try{
                PreparedStatement stmt = (PreparedStatement)
                conn.prepareStatement("SELECT PNAME FROM addProd");
                ResultSet accept = stmt.executeQuery();
                while(accept.next()){
                    String pt = accept.getString("PNAME");
                    p_name.addItem(pt);
                }

            }
            catch(SQLException ex){
                Logger.getLogger(LoginForm.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Database Connection Down...", "Unsuccessful", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_p_nameMouseClicked

    private void p_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p_nameActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_p_nameActionPerformed

    private void b_nameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_nameMouseClicked
        // TODO add your handling code here:
        int pName = p_name.getSelectedIndex() + 1;
        removeBr();
        Connection conn = javaConnect.connect();
        if(conn != null){
            try{
                PreparedStatement stmt = (PreparedStatement)
                conn.prepareStatement("SELECT BNAME FROM addBrand WHERE BID = "+pName);
                ResultSet accept = stmt.executeQuery();

                while(accept.next()){
                    String pt = accept.getString("BNAME");
                    b_name.addItem(pt);
                }
            }
            catch(SQLException ex){
                Logger.getLogger(LoginForm.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Database Connection Down...", "Unsuccessful", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_b_nameMouseClicked

    private void b_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_b_nameActionPerformed

    private void v_nameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_v_nameMouseClicked
        // TODO add your handling code here:
        String bName = p_name.getSelectedIndex() + 1 + "0" + b_name.getSelectedIndex() + 1;
        removeVr();
        Connection conn = javaConnect.connect();
        if(conn != null){
            try{
                PreparedStatement stmt = (PreparedStatement)
                conn.prepareStatement("SELECT VNAME FROM addVersion WHERE CAST (VID AS VARCHAR(255)) = '"+bName+"'");
                ResultSet accept = stmt.executeQuery();

                while(accept.next()){
                    String pt = accept.getString("VNAME");
                    v_name.addItem(pt);
                }
            }
            catch(SQLException ex){
                Logger.getLogger(LoginForm.class.getName()).log(Level.SEVERE, null, ex);

                JOptionPane.showMessageDialog(this, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Database Connection Down...", "Unsuccessful", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_v_nameMouseClicked

    private void s_availMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_s_availMouseClicked
        // TODO add your handling code here:
        String vName = p_name.getSelectedIndex() + 1 + "0" + b_name.getSelectedIndex() + 1 +"0"+ v_name.getSelectedIndex() + 1;
        removeSa();
        Connection conn = javaConnect.connect();
        if(conn != null){
            try{
                PreparedStatement stmt = (PreparedStatement)
                conn.prepareStatement("SELECT SAVAIL FROM addSAVAIL WHERE CAST (SID AS VARCHAR(255)) = '"+vName+"'");
                ResultSet accept = stmt.executeQuery();

                while(accept.next()){
                    String pt = accept.getString("SAVAIL");
                    s_avail.addItem(pt);
                }
            }
            catch(SQLException ex){
                Logger.getLogger(LoginForm.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Database Connection Down...", "Unsuccessful", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_s_availMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // TODO add your handling code here:
        dispose();
        logSeller obj = new logSeller();
        obj.pack();
        obj.setLocationRelativeTo(null);
        obj.setVisible(true);
    }//GEN-LAST:event_jButton4MouseClicked

    private void v_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_v_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_v_nameActionPerformed

    private void priceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_priceMouseClicked
        // TODO add your handling code here:
        String vName = p_name.getSelectedIndex() + 1 + "0" + b_name.getSelectedIndex() + 1 +"0"+ v_name.getSelectedIndex() + 1;
        removeP();
        Connection conn = javaConnect.connect();
        if(conn != null){
            try{
                PreparedStatement stmt = (PreparedStatement)
                conn.prepareStatement("SELECT PRICE FROM addPrice WHERE CAST (PRID AS VARCHAR(255)) = '"+vName+"'");
                ResultSet accept = stmt.executeQuery();

                while(accept.next()){
                    String pt = accept.getString("PRICE");
                    price.addItem(pt);
                }
            }
            catch(SQLException ex){
                Logger.getLogger(LoginForm.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Database Connection Down...", "Unsuccessful", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_priceMouseClicked

    private void bill_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bill_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bill_idActionPerformed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        genID();
    }//GEN-LAST:event_jButton2MouseClicked

    private void quanTityMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quanTityMouseClicked
        // TODO add your handling code here:
        String savail = p_name.getSelectedIndex() + 1 + "0" + b_name.getSelectedIndex() + 1 +"0"+ v_name.getSelectedIndex() + 1 + "0" + s_avail.getSelectedIndex() + 1;
        removeQ();
        Connection conn = javaConnect.connect();
        if(conn != null){
            try{
                PreparedStatement stmt = (PreparedStatement)
                conn.prepareStatement("SELECT NOAVAIL FROM addNOAVAIL WHERE CAST (NID AS VARCHAR(255)) = '"+savail+"'");
                ResultSet accept = stmt.executeQuery();

                while(accept.next()){
                    String pt = accept.getString("NOAVAIL");
                    quanTity.addItem(pt);
                }
            }
            catch(SQLException ex){
                Logger.getLogger(LoginForm.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Database Connection Down...", "Unsuccessful", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_quanTityMouseClicked

    private void quantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityActionPerformed

    private void PriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PriceActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        addtoTable();
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int QUANTITY = Integer.valueOf(quantity.getText());
        int AVAILABLE = Integer.valueOf(available.getText());
        
        if(QUANTITY > AVAILABLE){
             JOptionPane.showMessageDialog(this,"Not Enough in Stock");
             clear();
         }
         else{
        String BRAND = brand.getText();
        String VERSION = version.getText();
        double PRICE = Double.valueOf(Price.getText());

        if(quantity.getText().isEmpty() || BRAND.isEmpty() || VERSION.isEmpty()|| Price.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Form field cannot be empty...!", "Invalid", JOptionPane.INFORMATION_MESSAGE);
        }else{
            intoDatabase(QUANTITY, BRAND, VERSION, PRICE);
            clear();
        } 
         }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        int QUANTITY = Integer.valueOf(quantity.getText());
        String BRAND = brand.getText();
        String VERSION = version.getText();
        double PRICE = Double.valueOf(Price.getText().trim());

        if(quantity.getText().isEmpty() || BRAND.isEmpty() || BRAND.isEmpty()|| Price.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Form field cannot be empty...!", "Invalid", JOptionPane.INFORMATION_MESSAGE);
        }else{
            editDatabase(QUANTITY);
            clear();
        } 
    }//GEN-LAST:event_jButton5ActionPerformed

    private void billtableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_billtableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)billtable.getModel();
        int Myindex = billtable.getSelectedRow();
        id.setText(model.getValueAt(Myindex, 0).toString());
        quantity.setText(model.getValueAt(Myindex, 1).toString());
        brand.setText(model.getValueAt(Myindex, 2).toString());
        version.setText(model.getValueAt(Myindex, 3).toString());
        Price.setText(model.getValueAt(Myindex, 4).toString());
    }//GEN-LAST:event_billtableMouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        if(id.getText().isEmpty())
       {
           JOptionPane.showMessageDialog(this, "Enter the item to be deleted");
        }   
        else{            
            int ID = Integer.valueOf(id.getText());
            Connection conn = javaConnect.connect();
        if(conn != null){
            try{
            PreparedStatement stmt = (PreparedStatement)
                    conn.prepareStatement("DELETE FROM ROOT.BILLTABLE WHERE ID = "+ID);
                    
                    int accept = stmt.executeUpdate();
                    SelectSeller();
            }
            catch(SQLException ex){
                    Logger.getLogger(LoginForm.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Database Connection Down...", "Unsuccessful", JOptionPane.ERROR_MESSAGE);
        }

        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_jButton7ActionPerformed
    int i = 0;
    private void addToBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToBillActionPerformed
        // TODO add your handling code here:
        double QUANTITY = Double.valueOf(quantity.getText());
        String BRAND = brand.getText();
        String VERSION = version.getText();
        double PRICE = Double.valueOf(Price.getText());

        if(quantity.getText().isEmpty() || BRAND.isEmpty() || VERSION.isEmpty()|| Price.getText().isEmpty() || bill_id.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Form field cannot be empty...!", "Check bill ID", JOptionPane.INFORMATION_MESSAGE);
        }else{
            double TOTAL = QUANTITY * PRICE;
            grdTotal =grdTotal + TOTAL;
            String gg = String.valueOf(grdTotal);
            i++;
            if(i == 1){
            BillTxt.setText(BillTxt.getText()+"\n\t\tJeiy.Tech Supermart\n\t\tReference No: "+bill_id.getText()+"\n\n"+"      QUANTITY \t BRAND \t VERSION \t PRICE \t TOTAL\n"
                                                                   +i+"       "+ QUANTITY +"\t "+ BRAND +" \t"+ VERSION +"\t "+ PRICE +" \t"+ TOTAL+"\n");
            }
            else{
            BillTxt.setText(BillTxt.getText()+ i +"       "+ QUANTITY +"\t "+ BRAND +" \t"+ VERSION +"\t "+ PRICE +" \t"+ TOTAL+"\n");
            }
            total.setText(gg);
            edit();
            clear();
        }
    }//GEN-LAST:event_addToBillActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        try {
            // TODO add your handling code here:
            BillTxt.print();
            dispose();
            Bill obj = new Bill();
            obj.pack();
            obj.setLocationRelativeTo(null);
            obj.setVisible(true);
        } catch (PrinterException ex) {
            Logger.getLogger(Bill.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Bill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Bill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Bill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Bill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Bill().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea BillTxt;
    private javax.swing.JTextField Price;
    private javax.swing.JButton addToBill;
    private javax.swing.JTextField available;
    private javax.swing.JComboBox<String> b_name;
    private javax.swing.JTextField bill_id;
    private javax.swing.JTable billtable;
    private javax.swing.JTextField brand;
    private javax.swing.JTextField id;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> p_name;
    private javax.swing.JComboBox<String> price;
    private javax.swing.JComboBox<String> quanTity;
    private javax.swing.JTextField quantity;
    private javax.swing.JComboBox<String> s_avail;
    private javax.swing.JLabel total;
    private javax.swing.JComboBox<String> v_name;
    private javax.swing.JTextField version;
    // End of variables declaration//GEN-END:variables

    private void intoDatabase(int QUANTITY, String BRAND, String VERSION, double PRICE) {
        Connection conn = javaConnect.connect();
        if(conn != null){
            try{
            PreparedStatement stmt = (PreparedStatement)
                    conn.prepareStatement("insert into BILLTABLE(QUANTITY, BRAND, VERSION, PRICE) values(?,?,?,?)");
                    stmt.setInt(1, Integer.valueOf(quantity.getText()));
                    stmt.setString(2, brand.getText());
                    stmt.setString(3, version.getText());
                    stmt.setDouble(4, PRICE);
                    
                    int accept = stmt.executeUpdate();
                    SelectSeller();
            }
            catch(SQLException ex){
                    Logger.getLogger(LoginForm.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Database Connection Down...", "Unsuccessful", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void editDatabase(int QUANTITY) {
        int ID = Integer.valueOf(id.getText());
        Connection conn = javaConnect.connect();
        if(conn != null){
            try{
            PreparedStatement stmt = (PreparedStatement)
                    conn.prepareStatement("Update BILLTABLE set QUANTITY = "+ QUANTITY + " WHERE ID=" + ID);
                    
                    int accept = stmt.executeUpdate();
                    SelectSeller();
            }
            catch(SQLException ex){
                    Logger.getLogger(LoginForm.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Database Connection Down...", "Unsuccessful", JOptionPane.ERROR_MESSAGE);
        }
    }
}
